// 提供单一库切换包
def config = rootProject.ext //配置
def librarys = config.dependencies //
if (config.isMIMode.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
android {
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_11
//        targetCompatibility JavaVersion.VERSION_11
//    }

//    dexOptions {
//        jumboMode = true
//    }
    packagingOptions {
        pickFirst 'lib/*/libRSSupport.so'
        pickFirst 'lib/*/librsjni_androidx.so'
        pickFirst 'lib/*/librsjni.so'
        pickFirst 'lib/*/libstlport_shared.so'

    }

    compileSdkVersion config.compileSdkVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.appversionCode
        versionName config.appversionName
        multiDexEnabled true
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
        vectorDrawables.useSupportLibrary = true
//        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
        // Cmake
//        externalNativeBuild {
//            cmake {
//                version "3.18.1"
//                // 指定一些编译选项
//                cppFlags "-std=c++11 -frtti -fexceptions"
//                // 也可以使用下面这种语法向变量传递参数：
//                // arguments "-D变量名=参数".
//                arguments "-DANDROID_ARM_NEON=TRUE",
//                        // 使用下面这种语法向变量传递多个参数（参数之间使用空格隔开）：
//                        // arguments "-D变量名=参数1 参数2"
//                        "-DANDROID_CPP_FEATURES=rtti exceptions"
//                // 指定ABI
//                abiFilters /*"armeabi-v7a" ,*/ "arm64-v8a"
//            }
//        }

        ndk {
            abiFilters /*'armeabi', */ /*'armeabi-v7a',*/ 'arm64-v8a'
//            abiFilters 'armeabi-v7a'
        }
    }
    // CMakeLists.txt
//    externalNativeBuild {
//        cmake {
////            path "CMakeLists.txt"  //
//            path "src/main/cpp/CMakeLists.txt"
//            version "3.18.1"
//        }
//    }
    sourceSets.main {
        // MIM or Not MIM
        if (config.isMIMode.toBoolean()) {
            manifest.srcFile 'src/main/mi/AndroidManifest.xml'
        } else {
            manifest.srcFile 'src/main/AndroidManifest.xml'

            java {
                exclude 'mi/**'
            }
        }

//        jni.srcDirs = []
//        //LOCAL_LDFLAGS += -fuse-ld=bfd
//        //jni.srcDirs 'src/main/jni'
//        jniLibs.srcDir 'src/main/libs'
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    // MIM or Not MIM
    if (config.isMIMode.toBoolean()) {
        signingConfigs {
            release {
                storeFile file('./../releasekey/harmonyandroid.jks')
                keyAlias 'harmonyandroid'
                keyPassword 'HarmonyAndroid'
                storePassword 'HarmonyAndroid'
            }
            debug {
                storeFile file('./../releasekey/harmonyandroid.jks')
                keyAlias 'harmonyandroid'
                keyPassword 'HarmonyAndroid'
                storePassword 'HarmonyAndroid'
            }
        }
        buildTypes {
            release {
                minifyEnabled false
//            zipAlignEnabled false
//            shrinkResources false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.release
            }
            debug {
                minifyEnabled false
//            zipAlignEnabled false
//            shrinkResources false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.release
            }
        }
//        android.applicationVariants.all { variant ->
//            def outputApkName = "yewulibs-demo1-app-${variant.flavorName}-release.apk"
//            variant.outputs.all {
//                outputFileName = outputApkName
//            }
//        }
    } else {
        libraryVariants.all { variant ->
            variant.outputs.all {
//            outputFileName = "${variant.name}-${variant.versionName}.apk"
                outputFileName = "${project.name}.aar"
            }
        }
    }

    buildFeatures {
        dataBinding = true
        // for view binding :
        // viewBinding = true
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

}

// TODO Wallet打包
//apply from: './multiple-channel.gradle'